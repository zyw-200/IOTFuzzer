#!/bin/sh

FIRMWARE_FILE=new_firmware.tar

if [ -z $1 ] || [ ! -f $1 ]; then
	logger -s "$0 <firmware-file> [skip_error_check]"
	exit 1
fi

cd /tmp
/usr/bin/panel_led 4
#
# Move the firmware to current directory
#
mv $1 $FIRMWARE_FILE

#
# Run error check on the firmware
#
if [ -z $2 ]; then
	/usr/local/bin/firmware-error-check $FIRMWARE_FILE
	if [ $? -ne 0 ]; then
        	exit 1
	fi
fi

# Deleting the tar file, in Both cases as of now all checks must be finished.
rm -fr $FIRMWARE_FILE

#
# Give enough time for PHP/WEB GUI to redirect the client
sleep 5

#
# Setting config_version value to 0 during the firmware upgrade
#
if [ -f /var/pal.cfg ]; then
	logger -s "CLOUD: Setting the config_version string to 0 before firmware upgrade"
	sed '/config_version/d' /var/pal.cfg > /tmp/pal.cfg
	echo "opswat.config_version: 0" >> /tmp/pal.cfg
	mv /tmp/pal.cfg /var/pal.cfg
fi

#
# Kill all the processes
#
# Sync everything from cache before killing.
sync
ps | grep sysmonitor.sh | awk '{print $1}' | xargs kill -9

killall configd syslogd snmpd hostapd wpa_supplicant dropbear telnetd udhcpc dnsmasq reset_detect nmbd lighttpd php ntpclient klogd sleep
ps | grep ntpclient-wrapper | awk '{print $1}' | xargs kill -9
kill -9 `pidof log_ro`
sleep 1

if mount |grep '\/dev\/root on \/ type squashfs (ro)' ; then
	BOOT_TYPE="flashboot"
else
	BOOT_TYPE="netboot"
	/usr/local/bin/firmware-upgrade-stage2 $BOOT_TYPE
fi

#
# Keep essential binaries and libraries in memory as we are going to erase the flash
#
mkdir  -p bin
mkdir  -p lib
mkdir  -p dev
mkdir  -p tmp
mkdir  -p etc
mkdir  -p sbin
mkdir  -p proc
mkdir  -p oldroot
mkdir  -p newroot
mkdir  -p usr
mkdir  -p usr/bin
mkdir  -p usr/sbin

# binaries
cp -f /usr/bin/flashcp bin
cp -a /usr/local/bin/firmware-upgrade-stage2 bin
cp -f /bin/busybox bin

cp -a /bin/echo bin
cp -a /bin/cp bin
cp -a /bin/sleep bin
cp -a /bin/sync bin
cp -a /bin/kill bin
cp -a /bin/tar bin
cp -a /bin/dd bin
cp -a /bin/rm bin
cp -a /bin/mount bin
cp -a /bin/umount bin
cp -a /bin/sh bin
cp -a /bin/ash bin
cp -a /usr/bin/logger bin

cp -a /sbin/pivot_root sbin
cp -a /sbin/reboot sbin
cp -a /sbin/init sbin

cp -a /usr/bin/killall usr/bin
cp -a /usr/bin/led-op usr/bin
cp -a /usr/bin/[ usr/bin
cp -a /usr/sbin/chroot usr/sbin

# libraries
cp -a /lib/ld-uClibc-0.9.29.so lib
cp -a /lib/ld-uClibc.so.0 lib
cp -a /lib/libc.so.0 lib
cp -a /lib/libcrypt-0.9.29.so lib
cp -a /lib/libcrypt.so.0 lib
cp -a /lib/libm-0.9.29.so lib
cp -a /lib/libm.so.0 lib
cp -a /lib/libuClibc-0.9.29.so lib
cp -a /dev/* dev

# Generate a new /etc/inittab

echo '::sysinit:/bin/firmware-upgrade-stage2 '$BOOT_TYPE > etc/inittab
echo '::restart:/sbin/init'>> etc/inittab

# Change the root of FS to /tmp

./sbin/pivot_root . oldroot
cd /
mount -t proc proc /proc

# Restart the init daemon

exec ./usr/sbin/chroot . sh -c 'kill -HUP 1; sleep 3; kill -SIGQUIT 1' <dev/console >dev/console 2>&1
